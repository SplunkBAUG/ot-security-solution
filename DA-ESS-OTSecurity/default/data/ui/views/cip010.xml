<form theme="light">
  <label>CIP-010 R1: Configuration Change Management - Computers</label>
  <description>Develop a baseline configuration, individually or by group.</description>
  <init>
    <unset token="showNotSending"></unset>
    <unset token="showOsDeviations"></unset>
    <unset token="showAppDeviations"></unset>
  </init>
  <search id="reportingBase">
    <query>
      | metadata type=hosts 
| `get_cip_info_by_hostname(host, "host")`
| search host_classification="*cip*"  $esp_facility_tok$ $espZone_tok$
| `get_baseline_group`
| eval group_assigned=if(isnull(group_id), 0, 1)
| join type=left host 
    [ search `get_os_datasources` OR `get_installedapps_datasources`
    [ | inputlookup cip_asset_lookup.csv 
    |  rename nt_host as host 
    |  fields host]
    | eval baseline_sending=1
    | fields baseline_sending,host] 
| fillnull baseline_sending value=0
| eval state=if(baseline_sending=1, "Sending,", "Not Sending,")
| eval state=state.if(group_assigned=0, "Not Assigned", "Assigned")
| fields host,state,baseline_sending,group_assigned
    </query>
    <earliest>$time_tok.earliest$</earliest>
    <latest>$time_tok.latest$</latest>
    <sampleRatio>1</sampleRatio>
  </search>
  <fieldset submitButton="false">
    <input type="multiselect" token="espZone_tok" searchWhenChanged="true">
      <label>ESP Zone</label>
      <choice value="*">All</choice>
      <choice value="Unknown">Unknown</choice>
      <initialValue>*</initialValue>
      <valuePrefix>host_zone="*esp:</valuePrefix>
      <valueSuffix>*"</valueSuffix>
      <delimiter> OR </delimiter>
      <fieldForLabel>zone</fieldForLabel>
      <fieldForValue>zone</fieldForValue>
      <search>
        <query>| inputlookup cip_asset_lookup.csv
| search  classification="*cip:eap*" 
| `get_esp_zone(zone)`
| dedup zone sortby zone
| fields zone</query>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="multiselect" token="esp_facility_tok" searchWhenChanged="true">
      <label>Facility</label>
      <choice value="*">All</choice>
      <initialValue>*</initialValue>
      <valuePrefix>host_site_id="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter> OR </delimiter>
      <fieldForLabel>site_id</fieldForLabel>
      <fieldForValue>site_id</fieldForValue>
      <search>
        <query>| inputlookup cip_asset_lookup.csv
| search classification="*cip:eap*" 
| dedup site_id sortby site_id
| fields site_id</query>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </search>
    </input>
    <input type="time" token="time_tok" searchWhenChanged="true">
      <label>Time Period</label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="link" token="showRegulation_tok" searchWhenChanged="true">
      <label>CIP Requirements</label>
      <choice value="true">Show</choice>
      <choice value="false">Hide</choice>
      <default>false</default>
      <initialValue>false</initialValue>
      <change>
        <condition value="true">
          <set token="showRegulation_tok">true</set>
        </condition>
        <condition value="false">
          <unset token="showRegulation_tok"></unset>
        </condition>
      </change>
    </input>
  </fieldset>
  <row depends="$showRegulation_tok$">
    <panel>
      <html>
        <h1>R1.1.1:  Develop a baseline configuration, individually or by group, which includes operating system</h1>
        <h1>R1.1.2:  Develop a baseline configuration, individually or by group, which includes commercially or open source software installed</h1>
        <h1>R1.1.3:  Develop a baseline configuration, individually or by group, which includes custom software installed</h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <single>
        <title>Hosts with OS Deviation</title>
        <search>
          <query>| pivot Compute_Inventory OS count(OS) AS "Count of OS" SPLITROW dest AS dest SPLITROW os AS OS SPLITROW _time AS _time 
| eval host=dest
| `get_cip_info_by_hostname(host, "host")`
| search host_classification="*cip*" host_site_id="*" host_zone="*esp:**"
| dedup dest sortby -_time
| `get_baseline_group`
| join type=left group_id 
    [| `get_os_baseline`
    | eval baseline_OS=os_name
    | rename created_date as baseline_created_date 
    | fields baseline_created_date,baseline_OS,group_id,baseline_id ] 
| stats latest(baseline_OS) as baseline_OS latest(OS) as OS by group_id,host,baseline_id
|  eval baseline_OS=trim(baseline_OS), OS=trim(OS)
|  eval is_match=if(OS=baseline_OS, 1, 0)
| where OS!=baseline_OS
|  stats dc(host)</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">all</option>
        <option name="height">77</option>
        <option name="rangeColors">["0x53a051","0xdc4e41"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel"># Hosts</option>
        <option name="useColors">1</option>
        <drilldown>
          <set token="showOsDeviations">true</set>
          <unset token="showAppDeviations"></unset>
          <unset token="showMissingApps"></unset>
        </drilldown>
      </single>
    </panel>
    <panel>
      <single>
        <title>Hosts with Unapproved Application(s) Installed</title>
        <search>
          <query>`get_installedapps_datasources` 
    [| inputlookup cip_asset_lookup.csv 
    | rename nt_host as host 
    | fields host] 
| `get_baseline_group` 
| `get_cip_info_by_hostname(host, "host")` 
| search $esp_facility_tok$ $espZone_tok$
| fillnull DisplayVersion,DisplayName,Publisher value="NA" 
| eval DisplayName=replace(DisplayName, ",", " "),Publisher=replace(Publisher, ",", "")
| eval DisplayName=replace(DisplayName, "\"", ""),value=DisplayName.":".DisplayVersion.":".Publisher 
|  dedup value,host,group_id
| join type=left group_id,value 
    [| `get_application_baseline` 
    | eval value=name.":".version.":".publisher, app_type=software_type
    | fields group_id, baseline_id,value ] 
| eval baseline_id=if(isnull(baseline_id), "Out of baseline", "Match baseline") 
| search baseline_id="Out of baseline" 
|  stats dc(host)</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="drilldown">all</option>
        <option name="height">77</option>
        <option name="rangeColors">["0x53a051","0xdc4e41"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel"># Hosts</option>
        <option name="useColors">1</option>
        <drilldown>
          <set token="showUnapprovedApps">true</set>
          <unset token="showOsDeviations"></unset>
          <unset token="showMissingApps"></unset>
        </drilldown>
      </single>
    </panel>
    <panel>
      <single>
        <title>Hosts with Missing Applications</title>
        <search>
          <query>| `get_application_baseline`
|  eval value=name.":".version.":".publisher
| search value=*
| fillnull installed value="False" 
| `get_baseline_app_installs`
| join type=left group_id
    [ | inputlookup cip_baseline_groups
    | eval group_id=_key
    | makemv group_members delim="|"
    |  mvexpand group_members
    |  rename group_members as host
    |  fields group_id,host,group_name ]
| `get_cip_info_by_hostname(host, "host")`
| search $esp_facility_tok$ $espZone_tok$
| search installed="False" 
| stats dc(host)</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">none</option>
        <option name="drilldown">all</option>
        <option name="height">77</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x53a051","0xdc4e41"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="showSparkline">1</option>
        <option name="showTrendIndicator">1</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <option name="trendColorInterpretation">standard</option>
        <option name="trendDisplayMode">absolute</option>
        <option name="underLabel"># Hosts</option>
        <option name="unitPosition">after</option>
        <option name="useColors">1</option>
        <option name="useThousandSeparators">1</option>
        <drilldown>
          <set token="showMissingApps">true</set>
          <unset token="showOsDeviations"></unset>
          <unset token="showUnapprovedApps"></unset>
        </drilldown>
      </single>
    </panel>
  </row>
  <row>
    <panel depends="$showOsDeviations$">
      <table>
        <title>Installed OS vs Baselines</title>
        <search>
          <query>| pivot Compute_Inventory OS count(OS) AS "Count of OS" SPLITROW dest AS dest SPLITROW os AS OS SPLITROW _time AS _time 
| eval host=dest
| `get_cip_info_by_hostname(host, "host")`
| search host_classification="*cip*" host_site_id="*" host_zone="*esp:**"
| dedup dest sortby -_time
| `get_baseline_group`
| join type=left group_id 
    [| `get_os_baseline`
    | eval baseline_OS=os_name
    | rename created_date as baseline_created_date 
    | fields baseline_created_date,baseline_OS,group_id,baseline_id ] 
| stats latest(baseline_OS) as baseline_OS latest(OS) as OS by group_id,host,baseline_id
|  eval baseline_OS=trim(baseline_OS), OS=trim(OS)
|  eval is_match=if(OS=baseline_OS, 1, 0)
| where OS!=baseline_OS
| table host, OS, baseline_OS
| rename host as Host, OS as "Installed OS", baseline_OS as "Baseline OS"</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">20</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel depends="$showUnapprovedApps$">
      <table>
        <title>Unapproved Applications Installed</title>
        <search>
          <query>`get_installedapps_datasources` 
    [| inputlookup cip_asset_lookup.csv 
    | rename nt_host as host 
    | fields host] 
| `get_baseline_group` 
| `get_cip_info_by_hostname(host, "host")` 
| search $esp_facility_tok$ $espZone_tok$
| fillnull DisplayVersion,DisplayName,Publisher value="NA" 
| eval DisplayName=replace(DisplayName, ",", " "),Publisher=replace(Publisher, ",", "")
| eval DisplayName=replace(DisplayName, "\"", ""),value=DisplayName.":".DisplayVersion.":".Publisher 
|  dedup value,host,group_id
| join type=left group_id,value 
    [| `get_application_baseline` 
    | eval value=name.":".version.":".publisher, app_type=software_type
    | fields group_id, baseline_id,value ] 
| eval baseline_id=if(isnull(baseline_id), "Out of baseline", "Match baseline") 
| search baseline_id="Out of baseline" 
| eval DisplayName=mvindex(value, 0), DisplayVersion=mvindex(value, 1), Publisher=mvindex(value, 2) 
| makemv delim=":" value 
| eval DisplayName=mvindex(value, 0), DisplayVersion=mvindex(value, 1), Publisher=mvindex(value, 2) 
| table host, DisplayName,DisplayVersion,Publisher
| sort host</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">20</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
    <panel depends="$showMissingApps$">
      <table>
        <title>Approved Applications Not Installed</title>
        <search>
          <query>| `get_application_baseline`
|  eval value=name.":".version.":".publisher
| search value=*
| fillnull installed value="False" 
| `get_baseline_app_installs`
| join type=left group_id
    [ | inputlookup cip_baseline_groups
    | eval group_id=_key
    | makemv group_members delim="|"
    |  mvexpand group_members
    |  rename group_members as host
    |  fields group_id,host,group_name ]
| `get_cip_info_by_hostname(host, "host")`
| search $esp_facility_tok$ $espZone_tok$
| search installed="False" 
| table host,name,version,publisher
| sort -host</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="count">20</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <single>
        <title>Not Sending Baseline Data</title>
        <search base="reportingBase">
          <query>search baseline_sending=0 
| stats dc(host)</query>
        </search>
        <option name="drilldown">all</option>
        <option name="height">77</option>
        <option name="rangeColors">["0x53a051","0xdc4e41"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="underLabel"># Hosts</option>
        <option name="useColors">1</option>
        <drilldown>
          <set token="baselineSearch">baseline_sending=0</set>
          <set token="baselineDescription">Not Sending Baseline Data</set>
          <set token="showNotSending">true</set>
        </drilldown>
      </single>
    </panel>
    <panel>
      <single>
        <title>Sending Baseline Data but not Assigned</title>
        <search base="reportingBase">
          <query>search baseline_sending=1 group_assigned=0
| stats dc(host)</query>
        </search>
        <option name="colorBy">value</option>
        <option name="colorMode">none</option>
        <option name="drilldown">all</option>
        <option name="height">77</option>
        <option name="numberPrecision">0</option>
        <option name="rangeColors">["0x53a051","0xdc4e41"]</option>
        <option name="rangeValues">[0]</option>
        <option name="refresh.display">progressbar</option>
        <option name="showSparkline">1</option>
        <option name="showTrendIndicator">1</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
        <option name="trendColorInterpretation">standard</option>
        <option name="trendDisplayMode">absolute</option>
        <option name="underLabel"># Hosts</option>
        <option name="unitPosition">after</option>
        <option name="useColors">1</option>
        <option name="useThousandSeparators">1</option>
        <drilldown>
          <set token="baselineSearch">baseline_sending=1 group_assigned=0</set>
          <set token="baselineDescription">Sending Data but Not Assigned</set>
          <set token="showNotSending">true</set>
        </drilldown>
      </single>
    </panel>
  </row>
  <row depends="$showNotSending$">
    <panel>
      <table>
        <title>Hosts $baselineDescription$</title>
        <search base="reportingBase">
          <query>search $baselineSearch$
| fields host,state
| sort -state,host
| rename host as Host, state as Status</query>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <format type="color" field="baseline_sending">
          <colorPalette type="map">{"0":#DC4E41,"1":#53A051}</colorPalette>
        </format>
        <format type="color" field="group_assigned">
          <colorPalette type="map">{"0":#DC4E41,"1":#53A051}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row depends="$showRegulation_tok$">
    <panel>
      <html>
        <h1>R1.1.5:  Develop a baseline configuration, individually or by group, which includes all security patches applied</h1>
      </html>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>Security Patch Issues</title>
        <search>
          <query>| tstats `summariesonly` latest(Updates.status) as status from datamodel=Updates.Updates where 
    [| inputlookup cip_asset_lookup 
    | eval Updates.dest=nt_host 
    | fields Updates.dest ]
    by _time,Updates.dest,Updates.signature_id,Updates.vendor_product,Updates.signature 
| `drop_dm_object_name("Updates")` 
| `get_cip_info_by_hostname(dest, "host")` 
| search host_should_update="TRUE" signature!="unknown" $esp_facility_tok$ $espZone_tok$
| eval kb=replace(signature, "KB", "") 
| eval host=dest 
| `get_baseline_group` 
| search group_id=* 
| join type=left host 
    [| inputlookup cip_baseline_groups 
    | makemv delim="|" group_members 
    | mvexpand group_members 
    | rename group_members as host 
    | eval group_id=_key 
    | fields host, group_name,group_id ] 
| search group_id=* 
| join type=left group_id kb 
    [| `get_patch_baseline` 
    | eval baseline_title=title, baseline_update_type=patch_type, baseline_severity=severity, baseline_is_declined=is_declined, baseline_approval_state=is_approved, baseline_patch_creation_date=patch_creation_date 
    | eval baseline_patch_creation_date=strptime(baseline_patch_creation_date, "%Y-%m-%d %H:%M:%S") 
    | rename created_date as baseline_created_date 
    | fields baseline_*,group_id,kb ] 
| `get_esp_zone(host_zone)` 
| eval State=CASE(
    isnull(baseline_approval_state) and status="installed", "Needs Review - Installed",
    isnull(baseline_approval_state) and status="available", "Needs Review",
    baseline_approval_state="Install" and status="available", "Requires Install",
    baseline_approval_state="Exclude" AND status="installed", "Requires Uninstall",
    1=1, "Good") 
| search State!="Good" baseline_approval_state="Install" 
| fillnull baseline_approval_state,baseline_title,baseline_severity value="Not in baseline" 
| dedup host,kb sortby baseline_approval_state 
| table host, baseline_severity,kb, baseline_title, host_zone,State 
| sort -State,severity,host_nt_host 
| rename host_nt_host as Host, baseline_severity as Severity, kb as KB, baseline_title as Title, host_zone as "ESP Zone", status as "Current State" 
| convert ctime(Created)</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">none</option>
        <option name="percentagesRow">false</option>
        <option name="refresh.display">progressbar</option>
        <option name="rowNumbers">false</option>
        <option name="totalsRow">false</option>
        <option name="wrap">true</option>
        <format type="color" field="State">
          <colorPalette type="map">{"Requires Install":#F1813F,"Requires Uninstall":#F8BE34,"Needs Review":#F1813F,"Needs Review - Installed":#DC4E41,"Good":#53A051}</colorPalette>
        </format>
        <format type="color" field="Severity">
          <colorPalette type="map">{"Important":#F1813F,"Not in baseline":#DC4E41}</colorPalette>
        </format>
      </table>
    </panel>
    <panel>
      <table>
        <title>Security Patches Installed by Baseline Approval</title>
        <search>
          <query>| tstats `summariesonly` latest(Updates.status) as status from datamodel=Updates.Updates where  
    [| inputlookup cip_asset_lookup 
    | eval Updates.dest=nt_host 
    | fields Updates.dest ]
    by _time,Updates.dest,Updates.signature_id,Updates.vendor_product,Updates.signature 
| `drop_dm_object_name("Updates")` 
| `get_cip_info_by_hostname(dest, "host")` 
| search host_should_update="TRUE" status=installed $esp_facility_tok$ $espZone_tok$ 
| eval kb=replace(signature, "KB", "") 
| eval host=dest 
| `get_baseline_group` 
| search group_id=* 
| join type=left host 
    [| inputlookup cip_baseline_groups 
    | makemv delim="|" group_members 
    | mvexpand group_members 
    | rename group_members as host 
    | eval group_id=_key 
    | fields host, group_name,group_id ] 
| search group_id=* 
| join type=left group_id kb 
    [| `get_patch_baseline` 
    | eval baseline_title=title, baseline_update_type=patch_type, baseline_severity=severity, baseline_is_declined=is_declined, baseline_approval_state=is_approved, baseline_patch_creation_date=patch_creation_date 
    | eval baseline_patch_creation_date=strptime(baseline_patch_creation_date, "%Y-%m-%d %H:%M:%S") 
    | fields baseline_*,group_id,kb ] 
| search baseline_id=* 
| `get_esp_zone(host_zone)` 
| dedup host_nt_host,kb 
| table host_nt_host, baseline_severity,signature_id, baseline_title, host_zone
| sort -dayDiff,severity,host_nt_host 
| rename host_nt_host as Host, baseline_severity as Severity, signature_id as KB, baseline_title as Title, baseline_patch_creation_date as Created, host_zone as "ESP Zone" 
| convert ctime(Created)</query>
          <earliest>$time_tok.earliest$</earliest>
          <latest>$time_tok.latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
  </row>
</form>